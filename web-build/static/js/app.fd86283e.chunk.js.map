{"version":3,"sources":["hooks/useAirTable.js","functions/AirTableFormat.js","functions/zapierPost.js","components/pages/Dashboard.js","App.js","web-build/register-service-worker.js"],"names":["update_airtable_data_complete","id","name","updateAirtableData","keys","base","l","select","view","eachPage","records","fetchNextPage","forEach","record","response_dict","D","k","get","dict_from_record_keys","push","err","console","error","update_airtable_data","airtable","configure","endpointUrl","apiKey","airtable_base_define","useAirTable","useState","data","useEffect","refresh","AirTableFormat","code_list","_","map","reduce","memo","num","r","zapierPost","code","folder","extension","fetch","method","headers","Accept","body","JSON","stringify","Dashboard","code_airtable_js","code_airtable_py","code_airtable_css","onPress","e","preventDefault","App","View","style","styles","container","StyleSheet","create","flex","backgroundColor","alignItems","justifyContent","navigator","window","addEventListener","serviceWorker","register","scope","then","info","catch"],"mappings":"4JA6CA,SAASA,EAAT,GAAgF,IAAvCC,EAAsC,EAAtCA,GAAIC,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,mBAAoBC,EAAQ,EAARA,MA1BvE,YAAyE,IAAzCC,EAAwC,EAAxCA,KAAMH,EAAkC,EAAlCA,KAAMC,EAA4B,EAA5BA,mBAAoBC,EAAQ,EAARA,KAC1DE,EAAI,GACRD,EAAKH,GACFK,OAAO,CACNC,KAAM,cAEPC,UACC,SAAcC,EAASC,GACrBD,EAAQE,SAAQ,SAASC,GACvB,IAAMC,EAhBhB,SAA+BD,EAAQT,GACrC,IAAIW,EAAI,GAIR,OAHAX,EAAKQ,SAAQ,SAASI,GACpBD,EAAEC,GAAKH,EAAOI,IAAID,MAEbD,EAWuBG,CAAsBL,EAAQT,GACpDE,EAAEa,KAAKL,MAETH,OAEF,SAAcS,GACRA,EACFC,QAAQC,MAAM,CAAEF,QAIhBjB,EAAmBG,MAQ3BiB,CAAqB,CAAElB,KA5CzB,YAAuC,IAAPJ,EAAM,EAANA,GAM9B,OALAuB,IAASC,UAAU,CACjBC,YAAa,2BACbC,OAAQ,sBAECH,IAASnB,KAAKJ,GAsCd2B,CAAqB,CAAE3B,OACLC,OAAMC,qBAAoBC,SAGzD,IAWeyB,EAXK,SAAC,GAAwB,IAAtB5B,EAAqB,EAArBA,GAAIC,EAAiB,EAAjBA,KAAME,EAAW,EAAXA,KAAW,EACP0B,mBAAS,IADF,WACnCC,EADmC,KAC7B5B,EAD6B,KAQ1C,OANA6B,qBAAU,WACRhC,EAA8B,CAAEC,KAAIC,OAAMC,qBAAoBC,WAC7D,CAACH,EAAIC,IAID,CAAE6B,OAAME,QAHf,WACEjC,EAA8B,CAAEC,KAAIC,OAAMC,qBAAoBC,Y,wBC7C3D,IAAM8B,EAAiB,SAAC,GAAc,IAAZH,EAAW,EAAXA,KAGzBI,EAAYC,IAAEC,IAAIN,EAAM,QAY9B,OAXkBK,IAAEE,OAClBH,GACA,SAASI,EAAMC,GAEb,OADAC,EAAIF,EANQ,OAMYC,EACjBC,IAET,KCnBSC,EAAa,SAAC,GAAuC,IAO1DX,EAAO,CACXY,KAR6D,EAApCA,KASzBzC,KAT6D,EAA9BA,KAU/B0C,OAV6D,EAAxBA,OAWrCC,UAX6D,EAAhBA,WAa/CC,MAAM,uDAAwD,CAC5DC,OAAQ,OACRC,QAAS,CACPC,OAAQ,mBACR,eAAgB,oBAElBC,KAAMC,KAAKC,UAAUrB,MCoDVsB,EA3CG,WAChB,IAAMC,EAvBCzB,EAAY,CACjB5B,GAAI,oBACJC,KAAM,aACNE,KAAM,CAAC,OAAQ,OAAQ,eAAgB,mBAqBnCmD,EAhBC1B,EAAY,CACjB5B,GAAI,oBACJC,KAAM,SACNE,KAAM,CAAC,OAAQ,OAAQ,eAAgB,mBAcnCoD,EAVC3B,EAAY,CACjB5B,GAAI,oBACJC,KAAM,MACNE,KAAM,CAAC,OAAQ,OAAQ,eAAgB,mBA2BzC,OACE,kBAAC,YAAD,KACE,kBAAC,SAAD,MACA,kBAAC,UAAD,KACE,kBAAC,SAAD,CAAQqD,QAtBS,SAAAC,GACrBA,EAAEC,iBACF,IAAMhB,EAAOT,EAAe,CAAEH,KAAMuB,EAAiBvB,OAErDW,EAAW,CAAEC,OAAMzC,KAAM,uBAAwB0C,OAAQ,wCAAyCC,UAAW,UAmBvG,kBAAC,OAAD,yBAGF,kBAAC,SAAD,CAAQY,QAnBK,SAAAC,GACjBA,EAAEC,iBACF,IAAMhB,EAAOT,EAAe,CAAEH,KAAMwB,EAAiBxB,OACrDW,EAAW,CAAEC,OAAMzC,KAAM,uBAAwB0C,OAAQ,wCAAyCC,UAAW,UAiBvG,kBAAC,OAAD,qBAGF,kBAAC,SAAD,CAAQY,QAjBE,SAAAC,GACdA,EAAEC,iBACF,IAAMhB,EAAOT,EAAe,CAAEH,KAAMyB,EAAkBzB,OACtDW,EAAW,CAAEC,OAAMzC,KAAM,uBAAwB0C,OAAQ,yCAA0CC,UAAW,WAexG,kBAAC,OAAD,qBC/DK,SAASe,IACtB,OACE,kBAACC,EAAA,EAAD,CAAMC,MAAOC,EAAOC,WAClB,kBAAC,EAAD,OANN,kCAWA,IAAMD,EAASE,IAAWC,OAAO,CAC/BF,UAAW,CACTG,KAAM,EACNC,gBAAiB,OACjBC,WAAY,SACZC,eAAgB,a,+DCdhB,kBAAmBC,WACrBC,OAAOC,iBAAiB,QAAQ,WAC9BF,UAAUG,cACPC,SAAS,0BAA2B,CAAEC,MAAO,MAC7CC,MAAK,SAASC,OAGdC,OAAM,SAASzD,GACdD,QAAQyD,KAAK,oCAAqCxD,W","file":"static/js/app.fd86283e.chunk.js","sourcesContent":["import React, { Fragment, useState, useEffect } from \"react\";\nimport airtable from \"airtable\";\n\nfunction airtable_base_define({ id }) {\n  airtable.configure({\n    endpointUrl: \"https://api.airtable.com\",\n    apiKey: \"keyIffg4q9CmdItjv\"\n  });\n  var base = airtable.base(id);\n  return base;\n}\n\nfunction dict_from_record_keys(record, keys) {\n  var D = {};\n  keys.forEach(function(k) {\n    D[k] = record.get(k);\n  });\n  return D;\n}\nfunction update_airtable_data({ base, name, updateAirtableData, keys }) {\n  var l = [];\n  base(name)\n    .select({\n      view: \"Grid view\"\n    })\n    .eachPage(\n      function page(records, fetchNextPage) {\n        records.forEach(function(record) {\n          const response_dict = dict_from_record_keys(record, keys);\n          l.push(response_dict);\n        });\n        fetchNextPage();\n      },\n      function done(err) {\n        if (err) {\n          console.error({ err });\n          return;\n        } else {\n          // console.log({ base, name, l });\n          updateAirtableData(l);\n        }\n      }\n    );\n}\n\nfunction update_airtable_data_complete({ id, name, updateAirtableData, keys }) {\n  var base = airtable_base_define({ id });\n  update_airtable_data({ base, name, updateAirtableData, keys });\n}\n\nconst useAirTable = ({ id, name, keys }) => {\n  const [data, updateAirtableData] = useState([]);\n  useEffect(() => {\n    update_airtable_data_complete({ id, name, updateAirtableData, keys });\n  }, [id, name]);\n  function refresh() {\n    update_airtable_data_complete({ id, name, updateAirtableData, keys });\n  }\n  return { data, refresh };\n};\n\nexport default useAirTable;\n","import React from \"react\";\nimport _ from \"lodash\";\n\nfunction append_text_from_list(l) {\n  var text_blob = \"\";\n  l.forEach(function(item) {\n    var text_blob = text_blob + item;\n  });\n  return text_blob;\n}\n\nexport const AirTableFormat = ({ data }) => {\n  const extra_line = `\n  `;\n  const code_list = _.map(data, \"Code\");\n  const code_text = _.reduce(\n    code_list,\n    function(memo, num) {\n      r = memo + extra_line + num;\n      return r;\n    },\n    \"\"\n  );\n\n  // const code_text = append_text_from_list(code_list);\n  // console.log({ data, code_text, code_list });\n  return code_text;\n};\n","import React from \"react\";\n\nexport const zapierPost = ({ code, name, folder, extension }) => {\n  // const data = {\n  //   code: `function test(){return 1}`,\n  //   name: \"test_function_two\",\n  //   folder: \"/Apps/site44/chriscross.site44.com/js\",\n  //   extension: \".js\"\n  // };\n  const data = {\n    code,\n    name,\n    folder,\n    extension\n  };\n  fetch(\"https://hooks.zapier.com/hooks/catch/229795/o9jn84p/\", {\n    method: \"POST\",\n    headers: {\n      Accept: \"application/json\",\n      \"Content-Type\": \"application/json\"\n    },\n    body: JSON.stringify(data)\n  });\n};\n","import React from \"react\";\nimport { StyleSheet, View } from \"react-native\";\nimport useAirTable from \"../../hooks/useAirTable\";\nimport { Container, Header, Content, Button, Text } from \"native-base\";\nimport { AirTableFormat } from \"../../functions/AirTableFormat\";\nimport { zapierPost } from \"../../functions/zapierPost\";\n\nconst codeAirTableJS = () => {\n  return useAirTable({\n    id: \"applT0lSEVH6ADeKo\",\n    name: \"Javascript\",\n    keys: [\"Name\", \"Code\", \"Date Created\", \"Date Modified\"]\n  });\n};\n\nconst codeAirTablePy = () => {\n  return useAirTable({\n    id: \"applT0lSEVH6ADeKo\",\n    name: \"Python\",\n    keys: [\"Name\", \"Code\", \"Date Created\", \"Date Modified\"]\n  });\n};\nconst codeAirTableCSS = () => {\n  return useAirTable({\n    id: \"applT0lSEVH6ADeKo\",\n    name: \"CSS\",\n    keys: [\"Name\", \"Code\", \"Date Created\", \"Date Modified\"]\n  });\n};\n\nconst Dashboard = () => {\n  const code_airtable_js = codeAirTableJS();\n  const code_airtable_py = codeAirTablePy();\n  const code_airtable_css = codeAirTableCSS();\n\n  const JavaScriptSave = e => {\n    e.preventDefault();\n    const code = AirTableFormat({ data: code_airtable_js.data });\n    // console.log({ code });\n    zapierPost({ code, name: \"supporting_functions\", folder: \"/Apps/site44/chriscross.site44.com/js\", extension: \".js\" });\n  };\n\n  const PythonSave = e => {\n    e.preventDefault();\n    const code = AirTableFormat({ data: code_airtable_py.data });\n    zapierPost({ code, name: \"supporting_functions\", folder: \"/Apps/site44/chriscross.site44.com/py\", extension: \".py\" });\n  };\n\n  const CSSSave = e => {\n    e.preventDefault();\n    const code = AirTableFormat({ data: code_airtable_css.data });\n    zapierPost({ code, name: \"supporting_functions\", folder: \"/Apps/site44/chriscross.site44.com/css\", extension: \".css\" });\n  };\n  return (\n    <Container>\n      <Header />\n      <Content>\n        <Button onPress={JavaScriptSave}>\n          <Text>Save Javascript</Text>\n        </Button>\n\n        <Button onPress={PythonSave}>\n          <Text>Save Python</Text>\n        </Button>\n\n        <Button onPress={CSSSave}>\n          <Text>Save CSS</Text>\n        </Button>\n      </Content>\n    </Container>\n  );\n};\n\nexport default Dashboard;\n","import React from \"react\";\nimport { StyleSheet, Text, View } from \"react-native\";\nimport Dashboard from \"./components/pages/Dashboard\";\nexport default function App() {\n  return (\n    <View style={styles.container}>\n      <Dashboard />\n    </View>\n  );\n}\n\nconst styles = StyleSheet.create({\n  container: {\n    flex: 1,\n    backgroundColor: \"#fff\",\n    alignItems: \"center\",\n    justifyContent: \"center\"\n  }\n});\n","/* eslint-env browser */\n\nif ('serviceWorker' in navigator) {\n  window.addEventListener('load', function() {\n    navigator.serviceWorker\n      .register('/expo-service-worker.js', { scope: '/' })\n      .then(function(info) {\n        // console.info('Registered service-worker', info);\n      })\n      .catch(function(error) {\n        console.info('Failed to register service-worker', error);\n      });\n  });\n}\n"],"sourceRoot":""}